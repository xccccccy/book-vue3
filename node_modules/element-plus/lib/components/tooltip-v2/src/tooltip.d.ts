import type { ExtractPropTypes } from 'vue';
export declare const tooltipV2Props: {
    readonly ariaLabel: StringConstructor;
    readonly arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
    readonly placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
    readonly reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
    readonly strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
    readonly showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
    readonly onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    readonly height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    readonly style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
    readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
    readonly defaultOpen: BooleanConstructor;
    readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
    readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
};
export declare type TooltipV2Props = ExtractPropTypes<typeof tooltipV2Props>;
