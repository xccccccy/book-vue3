declare const _default: import("vue").DefineComponent<{
    readonly ariaLabel: StringConstructor;
    readonly arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
    readonly placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
    readonly reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
    readonly strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
    readonly showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
    readonly onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    readonly height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    readonly style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
    readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
    readonly defaultOpen: BooleanConstructor;
    readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
    readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
}, {
    props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
        readonly ariaLabel: StringConstructor;
        readonly arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
        readonly placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
        readonly reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
        readonly strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
        readonly showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
        readonly onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        readonly height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        readonly style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
        readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
        readonly defaultOpen: BooleanConstructor;
        readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
        readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
        readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    }>> & {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
    }>>;
    refedProps: import("vue").ToRefs<Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
        readonly ariaLabel: StringConstructor;
        readonly arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
        readonly placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
        readonly reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
        readonly strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
        readonly showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
        readonly onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        readonly width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        readonly height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        readonly style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
        readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
        readonly defaultOpen: BooleanConstructor;
        readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
        readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
        readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    }>> & {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
    }>>>;
    arrowProps: {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        readonly height?: number | undefined;
        readonly width?: number | undefined;
        readonly placement?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown> | undefined;
        readonly strategy?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed" | "absolute", unknown> | undefined;
        readonly style?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, unknown, unknown> | undefined;
        readonly ariaLabel?: string | undefined;
        readonly onBlur?: ((e: Event) => boolean | void) | undefined;
        readonly onFocus?: ((e: Event) => boolean | void) | undefined;
        readonly open?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onClick?: ((e: Event) => boolean | void) | undefined;
        readonly showArrow?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onMouseLeave?: ((e: Event) => boolean | void) | undefined;
        readonly onMouseEnter?: ((e: Event) => boolean | void) | undefined;
        readonly reference?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, unknown, unknown> | undefined;
        readonly arrowPadding?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, unknown, unknown> | undefined;
        readonly delayDuration?: number | undefined;
        readonly onOpenChange?: ((state: boolean) => void) | undefined;
        readonly "onUpdate:open"?: ((state: boolean) => void) | undefined;
        readonly defaultOpen?: boolean | undefined;
        readonly onMouseDown?: ((e: Event) => boolean | void) | undefined;
    };
    contentProps: {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        readonly height?: number | undefined;
        readonly width?: number | undefined;
        readonly placement?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown> | undefined;
        readonly strategy?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed" | "absolute", unknown> | undefined;
        readonly style?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, unknown, unknown> | undefined;
        readonly ariaLabel?: string | undefined;
        readonly onBlur?: ((e: Event) => boolean | void) | undefined;
        readonly onFocus?: ((e: Event) => boolean | void) | undefined;
        readonly open?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onClick?: ((e: Event) => boolean | void) | undefined;
        readonly showArrow?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onMouseLeave?: ((e: Event) => boolean | void) | undefined;
        readonly onMouseEnter?: ((e: Event) => boolean | void) | undefined;
        readonly reference?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, unknown, unknown> | undefined;
        readonly arrowPadding?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, unknown, unknown> | undefined;
        readonly delayDuration?: number | undefined;
        readonly onOpenChange?: ((state: boolean) => void) | undefined;
        readonly "onUpdate:open"?: ((state: boolean) => void) | undefined;
        readonly defaultOpen?: boolean | undefined;
        readonly onMouseDown?: ((e: Event) => boolean | void) | undefined;
    };
    rootProps: {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        readonly height?: number | undefined;
        readonly width?: number | undefined;
        readonly placement?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown> | undefined;
        readonly strategy?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed" | "absolute", unknown> | undefined;
        readonly style?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, unknown, unknown> | undefined;
        readonly ariaLabel?: string | undefined;
        readonly onBlur?: ((e: Event) => boolean | void) | undefined;
        readonly onFocus?: ((e: Event) => boolean | void) | undefined;
        readonly open?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onClick?: ((e: Event) => boolean | void) | undefined;
        readonly showArrow?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onMouseLeave?: ((e: Event) => boolean | void) | undefined;
        readonly onMouseEnter?: ((e: Event) => boolean | void) | undefined;
        readonly reference?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, unknown, unknown> | undefined;
        readonly arrowPadding?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, unknown, unknown> | undefined;
        readonly delayDuration?: number | undefined;
        readonly onOpenChange?: ((state: boolean) => void) | undefined;
        readonly "onUpdate:open"?: ((state: boolean) => void) | undefined;
        readonly defaultOpen?: boolean | undefined;
        readonly onMouseDown?: ((e: Event) => boolean | void) | undefined;
    };
    triggerProps: {
        [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        readonly height?: number | undefined;
        readonly width?: number | undefined;
        readonly placement?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown> | undefined;
        readonly strategy?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed" | "absolute", unknown> | undefined;
        readonly style?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, unknown, unknown> | undefined;
        readonly ariaLabel?: string | undefined;
        readonly onBlur?: ((e: Event) => boolean | void) | undefined;
        readonly onFocus?: ((e: Event) => boolean | void) | undefined;
        readonly open?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onClick?: ((e: Event) => boolean | void) | undefined;
        readonly showArrow?: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown> | undefined;
        readonly onMouseLeave?: ((e: Event) => boolean | void) | undefined;
        readonly onMouseEnter?: ((e: Event) => boolean | void) | undefined;
        readonly reference?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, unknown, unknown> | undefined;
        readonly arrowPadding?: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, unknown, unknown> | undefined;
        readonly delayDuration?: number | undefined;
        readonly onOpenChange?: ((state: boolean) => void) | undefined;
        readonly "onUpdate:open"?: ((state: boolean) => void) | undefined;
        readonly defaultOpen?: boolean | undefined;
        readonly onMouseDown?: ((e: Event) => boolean | void) | undefined;
    };
    TooltipV2Root: import("vue").DefineComponent<{
        readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
        readonly defaultOpen: BooleanConstructor;
        readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
        readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
        readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    }, {
        props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
            readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
            readonly defaultOpen: BooleanConstructor;
            readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
            readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
            readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
        }>> & {
            [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        }>>;
        _open: import("vue").Ref<boolean>;
        triggerRef: import("vue").Ref<HTMLElement | null>;
        open: import("vue").WritableComputedRef<boolean>;
        isOpenDelayed: import("vue").ComputedRef<boolean>;
        onDelayedOpen: import("@vueuse/shared").Fn;
        clearTimer: import("@vueuse/shared").Fn;
        contentId: import("vue").Ref<string>;
        onNormalOpen: () => void;
        onDelayOpen: () => void;
        onOpen: () => void;
        onClose: () => void;
        onChange: (open: boolean) => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
        readonly defaultOpen: BooleanConstructor;
        readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
        readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
        readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    }>>, {
        open: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown>;
        delayDuration: number;
        onOpenChange: (state: boolean) => void;
        "onUpdate:open": (state: boolean) => void;
        defaultOpen: boolean;
    }>;
    TooltipV2Arrow: import("vue").DefineComponent<{
        width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
    }, {
        props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
            width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
            height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
            style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
        }>> & {
            [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        }>>;
        arrowStyle: import("vue").ComputedRef<import("vue").CSSProperties>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
        style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
    }>>, {
        height: number;
        width: number;
        style: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, unknown, unknown>;
    }>;
    TooltipV2Content: import("vue").DefineComponent<{
        nowrap: BooleanConstructor;
        ariaLabel: StringConstructor;
        arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
        placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
        reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
        strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
        showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
    }, {
        props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
            nowrap: BooleanConstructor;
            ariaLabel: StringConstructor;
            arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
            placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
            reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
            strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
            showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
        }>> & {
            [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        }>>;
        triggerRef: import("vue").Ref<HTMLElement | null>;
        contentId: import("vue").Ref<string>;
        placement: import("vue").Ref<import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>>;
        strategy: import("vue").Ref<import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed" | "absolute", unknown>>;
        arrowRef: import("vue").Ref<HTMLElement | undefined>;
        referenceRef: import("vue").Ref<HTMLElement | import("@floating-ui/dom").VirtualElement | undefined>;
        contentRef: import("vue").Ref<HTMLElement | undefined>;
        middlewareData: import("vue").Ref<{
            [x: string]: any;
            arrow?: {
                x?: number | undefined;
                y?: number | undefined;
                centerOffset: number;
            } | undefined;
            autoPlacement?: {
                index?: number | undefined;
                overflows: {
                    placement: import("@floating-ui/core").Placement;
                    overflows: number[];
                }[];
            } | undefined;
            flip?: {
                index?: number | undefined;
                overflows: {
                    placement: import("@floating-ui/core").Placement;
                    overflows: number[];
                }[];
            } | undefined;
            hide?: {
                referenceHidden?: boolean | undefined;
                escaped?: boolean | undefined;
                referenceHiddenOffsets?: {
                    top: number;
                    right: number;
                    bottom: number;
                    left: number;
                } | undefined;
                escapedOffsets?: {
                    top: number;
                    right: number;
                    bottom: number;
                    left: number;
                } | undefined;
            } | undefined;
            offset?: {
                x: number;
                y: number;
            } | undefined;
            shift?: {
                x: number;
                y: number;
            } | undefined;
        }>;
        x: import("vue").Ref<string | undefined>;
        y: import("vue").Ref<string | undefined>;
        contentStyle: import("vue").ComputedRef<import("vue").CSSProperties>;
        arrowStyle: import("vue").ComputedRef<import("vue").CSSProperties>;
        ElVisuallyHidden: import("vue").DefineComponent<{
            style: {
                type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
            };
        }, {
            computedStyle: import("vue").ComputedRef<any>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            style: {
                type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
            };
        }>>, {}>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        nowrap: BooleanConstructor;
        ariaLabel: StringConstructor;
        arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
        placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
        reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
        strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
        showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
    }>>, {
        placement: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
        strategy: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed" | "absolute", unknown>;
        nowrap: boolean;
        showArrow: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown>;
        reference: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, unknown, unknown>;
        arrowPadding: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, unknown, unknown>;
    }>;
    TooltipV2Trigger: import("vue").DefineComponent<{
        onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        nowrap: BooleanConstructor;
    }, {
        props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
            onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
            onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
            onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
            onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
            onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
            onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
            nowrap: BooleanConstructor;
        }>> & {
            [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        }>>;
        onClose: () => void;
        onOpen: () => void;
        onDelayOpen: () => void;
        triggerRef: import("vue").Ref<HTMLElement | null>;
        isMousedown: boolean;
        setTriggerRef: (el: HTMLElement | null) => void;
        onMouseenter: (event: Event) => void;
        onMouseleave: (event: Event) => void;
        onMouseup: () => void;
        onMousedown: (event: Event) => void;
        onFocus: (event: Event) => void;
        onBlur: (event: Event) => void;
        onClick: (event: Event) => void;
        events: {
            blur: (event: Event) => void;
            click: (event: Event) => void;
            focus: (event: Event) => void;
            mousedown: (event: Event) => void;
            mouseenter: (event: Event) => void;
            mouseleave: (event: Event) => void;
        };
        setEvents: <T extends (e: Event) => void>(el: HTMLElement | null | undefined, events: Record<string, T>, type: "addEventListener" | "removeEventListener") => void;
        ForwardRef: import("vue").DefineComponent<{
            readonly setRef: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("./forward-ref").RefSetter>, unknown, true, unknown, unknown>;
            readonly onlyChild: BooleanConstructor;
        }, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            readonly setRef: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("./forward-ref").RefSetter>, unknown, true, unknown, unknown>;
            readonly onlyChild: BooleanConstructor;
        }>>, {
            onlyChild: boolean;
        }>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
        nowrap: BooleanConstructor;
    }>>, {
        onBlur: (e: Event) => boolean | void;
        onFocus: (e: Event) => boolean | void;
        nowrap: boolean;
        onClick: (e: Event) => boolean | void;
        onMouseLeave: (e: Event) => boolean | void;
        onMouseEnter: (e: Event) => boolean | void;
        onMouseDown: (e: Event) => boolean | void;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    readonly ariaLabel: StringConstructor;
    readonly arrowPadding: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, 5, unknown, unknown, unknown>;
    readonly placement: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "bottom", unknown, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
    readonly reference: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, null, unknown, unknown, unknown>;
    readonly strategy: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed", unknown, "fixed" | "absolute", unknown>;
    readonly showArrow: import("../../../utils").BuildPropReturn<BooleanConstructor, true, unknown, unknown, unknown>;
    readonly onBlur: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onClick: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onFocus: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseDown: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseEnter: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly onMouseLeave: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(e: Event) => boolean | void>, unknown, unknown, unknown, unknown>;
    readonly width: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    readonly height: import("../../../utils").BuildPropReturn<NumberConstructor, number, unknown, unknown, unknown>;
    readonly style: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, null, unknown, unknown, unknown>;
    readonly delayDuration: import("../../../utils").BuildPropReturn<NumberConstructor, 300, unknown, unknown, unknown>;
    readonly defaultOpen: BooleanConstructor;
    readonly open: import("../../../utils").BuildPropReturn<BooleanConstructor, undefined, unknown, unknown, unknown>;
    readonly onOpenChange: import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
    readonly 'onUpdate:open': import("../../../utils").BuildPropReturn<import("../../../utils").PropWrapper<(state: boolean) => void>, unknown, unknown, unknown, unknown>;
}>>, {
    height: number;
    width: number;
    placement: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Placement>, "top" | "right" | "bottom" | "left" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "right-start" | "right-end" | "left-start" | "left-end", unknown>;
    strategy: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Strategy>, "fixed" | "absolute", unknown>;
    style: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("vue").CSSProperties | null>, unknown, unknown>;
    onBlur: (e: Event) => boolean | void;
    onFocus: (e: Event) => boolean | void;
    open: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown>;
    onClick: (e: Event) => boolean | void;
    showArrow: import("../../../utils").BuildPropType<BooleanConstructor, unknown, unknown>;
    onMouseLeave: (e: Event) => boolean | void;
    onMouseEnter: (e: Event) => boolean | void;
    reference: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<HTMLElement | import("@floating-ui/dom").VirtualElement | null>, unknown, unknown>;
    arrowPadding: import("../../../utils").BuildPropType<import("../../../utils").PropWrapper<import("@floating-ui/core").Padding>, unknown, unknown>;
    delayDuration: number;
    onOpenChange: (state: boolean) => void;
    "onUpdate:open": (state: boolean) => void;
    defaultOpen: boolean;
    onMouseDown: (e: Event) => boolean | void;
}>;
export default _default;
