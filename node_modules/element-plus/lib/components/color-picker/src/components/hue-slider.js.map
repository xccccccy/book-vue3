{"version":3,"file":"hue-slider.js","sources":["../../../../../../../packages/components/color-picker/src/components/hue-slider.vue"],"sourcesContent":["<template>\n  <div class=\"el-color-hue-slider\" :class=\"{ 'is-vertical': vertical }\">\n    <div ref=\"bar\" class=\"el-color-hue-slider__bar\" @click=\"handleClick\" />\n    <div\n      ref=\"thumb\"\n      class=\"el-color-hue-slider__thumb\"\n      :style=\"{\n        left: thumbLeft + 'px',\n        top: thumbTop + 'px',\n      }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { getClientXY } from '@element-plus/utils'\nimport draggable from '../draggable'\n\nimport type { PropType } from 'vue'\nimport type Color from '../color'\n\nexport default defineComponent({\n  name: 'ElColorHueSlider',\n\n  props: {\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n\n    vertical: Boolean,\n  },\n  setup(props) {\n    const instance = getCurrentInstance()\n    // ref\n    const thumb = ref<HTMLElement | null>(null)\n    const bar = ref<HTMLElement | null>(null)\n    // data\n    const thumbLeft = ref(0)\n    const thumbTop = ref(0)\n    // computed\n    const hueValue = computed(() => {\n      return props.color.get('hue')\n    })\n    // watch\n    watch(\n      () => hueValue.value,\n      () => {\n        update()\n      }\n    )\n\n    // methods\n    function handleClick(event: Event) {\n      const target = event.target\n\n      if (target !== thumb.value) {\n        handleDrag(event)\n      }\n    }\n\n    function handleDrag(event) {\n      const el = instance.vnode.el as HTMLElement\n      const rect = el.getBoundingClientRect()\n      const { clientX, clientY } = getClientXY(event)\n      let hue\n\n      if (!props.vertical) {\n        let left = clientX - rect.left\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2)\n        left = Math.max(thumb.value.offsetWidth / 2, left)\n\n        hue = Math.round(\n          ((left - thumb.value.offsetWidth / 2) /\n            (rect.width - thumb.value.offsetWidth)) *\n            360\n        )\n      } else {\n        let top = clientY - rect.top\n\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2)\n        top = Math.max(thumb.value.offsetHeight / 2, top)\n        hue = Math.round(\n          ((top - thumb.value.offsetHeight / 2) /\n            (rect.height - thumb.value.offsetHeight)) *\n            360\n        )\n      }\n      props.color.set('hue', hue)\n    }\n\n    function getThumbLeft() {\n      const el = instance.vnode.el\n\n      if (props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetWidth - thumb.value.offsetWidth / 2)) / 360\n      )\n    }\n\n    function getThumbTop() {\n      const el = instance.vnode.el as HTMLElement\n      if (!props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetHeight - thumb.value.offsetHeight / 2)) / 360\n      )\n    }\n\n    function update() {\n      thumbLeft.value = getThumbLeft()\n      thumbTop.value = getThumbTop()\n    }\n\n    // mounded\n    onMounted(() => {\n      const dragConfig = {\n        drag: (event) => {\n          handleDrag(event)\n        },\n        end: (event) => {\n          handleDrag(event)\n        },\n      }\n\n      draggable(bar.value, dragConfig)\n      draggable(thumb.value, dragConfig)\n      update()\n    })\n\n    return {\n      bar,\n      thumb,\n      thumbLeft,\n      thumbTop,\n      hueValue,\n      handleClick,\n      update,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","getCurrentInstance","ref","computed","watch","getClientXY","onMounted","draggable","_createElementBlock","_normalizeClass","_createElementVNode","_normalizeStyle"],"mappings":"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"}