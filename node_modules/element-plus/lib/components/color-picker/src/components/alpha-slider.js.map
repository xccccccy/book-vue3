{"version":3,"file":"alpha-slider.js","sources":["../../../../../../../packages/components/color-picker/src/components/alpha-slider.vue"],"sourcesContent":["<template>\n  <div class=\"el-color-alpha-slider\" :class=\"{ 'is-vertical': vertical }\">\n    <div\n      ref=\"bar\"\n      class=\"el-color-alpha-slider__bar\"\n      :style=\"{\n        background,\n      }\"\n      @click=\"handleClick\"\n    />\n    <div\n      ref=\"thumb\"\n      class=\"el-color-alpha-slider__thumb\"\n      :style=\"{\n        left: thumbLeft + 'px',\n        top: thumbTop + 'px',\n      }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { getClientXY } from '@element-plus/utils'\nimport draggable from '../draggable'\n\nimport type { PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type Color from '../color'\n\nexport default defineComponent({\n  name: 'ElColorAlphaSlider',\n  props: {\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n    vertical: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    const instance = getCurrentInstance()\n    // ref\n    const thumb = shallowRef<Nullable<HTMLElement>>(null)\n    const bar = shallowRef<Nullable<HTMLElement>>(null)\n\n    // data\n    const thumbLeft = ref(0)\n    const thumbTop = ref(0)\n    const background = ref<Nullable<string>>(null)\n\n    watch(\n      () => props.color.get('alpha'),\n      () => {\n        update()\n      }\n    )\n    watch(\n      () => props.color.value,\n      () => {\n        update()\n      }\n    )\n\n    //methods\n    function getThumbLeft() {\n      if (props.vertical) return 0\n      const el = instance.vnode.el\n      const alpha = props.color.get('alpha')\n\n      if (!el) return 0\n      return Math.round(\n        (alpha * (el.offsetWidth - thumb.value.offsetWidth / 2)) / 100\n      )\n    }\n\n    function getThumbTop() {\n      const el = instance.vnode.el\n      if (!props.vertical) return 0\n      const alpha = props.color.get('alpha')\n\n      if (!el) return 0\n      return Math.round(\n        (alpha * (el.offsetHeight - thumb.value.offsetHeight / 2)) / 100\n      )\n    }\n\n    function getBackground() {\n      if (props.color && props.color.value) {\n        const { r, g, b } = props.color.toRgb()\n        return `linear-gradient(to right, rgba(${r}, ${g}, ${b}, 0) 0%, rgba(${r}, ${g}, ${b}, 1) 100%)`\n      }\n      return null\n    }\n\n    function handleClick(event: Event) {\n      const target = event.target\n\n      if (target !== thumb.value) {\n        handleDrag(event)\n      }\n    }\n\n    function handleDrag(event) {\n      const el = instance.vnode.el as HTMLElement\n      const rect = el.getBoundingClientRect()\n      const { clientX, clientY } = getClientXY(event)\n\n      if (!props.vertical) {\n        let left = clientX - rect.left\n        left = Math.max(thumb.value.offsetWidth / 2, left)\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2)\n\n        props.color.set(\n          'alpha',\n          Math.round(\n            ((left - thumb.value.offsetWidth / 2) /\n              (rect.width - thumb.value.offsetWidth)) *\n              100\n          )\n        )\n      } else {\n        let top = clientY - rect.top\n        top = Math.max(thumb.value.offsetHeight / 2, top)\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2)\n\n        props.color.set(\n          'alpha',\n          Math.round(\n            ((top - thumb.value.offsetHeight / 2) /\n              (rect.height - thumb.value.offsetHeight)) *\n              100\n          )\n        )\n      }\n    }\n\n    function update() {\n      thumbLeft.value = getThumbLeft()\n      thumbTop.value = getThumbTop()\n      background.value = getBackground()\n    }\n\n    // mounded\n    onMounted(() => {\n      const dragConfig = {\n        drag: (event) => {\n          handleDrag(event)\n        },\n        end: (event) => {\n          handleDrag(event)\n        },\n      }\n\n      draggable(bar.value, dragConfig)\n      draggable(thumb.value, dragConfig)\n      update()\n    })\n\n    return {\n      thumb,\n      bar,\n      thumbLeft,\n      thumbTop,\n      background,\n      handleClick,\n      update,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","getCurrentInstance","shallowRef","ref","watch","getClientXY","onMounted","draggable","_createElementBlock","_normalizeClass","_createElementVNode","_normalizeStyle"],"mappings":"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"}