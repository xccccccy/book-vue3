{"version":3,"file":"item.js","sources":["../../../../../../packages/components/steps/src/item.vue"],"sourcesContent":["<template>\n  <div\n    :style=\"style\"\n    :class=\"[\n      ns.b(),\n      ns.is(isSimple ? 'simple' : parent.props.direction),\n      ns.is('flex', isLast && !space && !isCenter),\n      ns.is('center', isCenter && !isVertical && !isSimple),\n    ]\"\n  >\n    <!-- icon & line -->\n    <div :class=\"[ns.e('head'), ns.is(currentStatus)]\">\n      <div v-if=\"!isSimple\" :class=\"ns.e('line')\">\n        <i :class=\"ns.e('line-inner')\" :style=\"lineStyle\" />\n      </div>\n\n      <div :class=\"[ns.e('icon'), ns.is(icon ? 'icon' : 'text')]\">\n        <slot\n          v-if=\"currentStatus !== 'success' && currentStatus !== 'error'\"\n          name=\"icon\"\n        >\n          <el-icon v-if=\"icon\" :class=\"ns.e('icon-inner')\">\n            <component :is=\"icon\" />\n          </el-icon>\n          <div v-if=\"!icon && !isSimple\" :class=\"ns.e('icon-inner')\">\n            {{ index + 1 }}\n          </div>\n        </slot>\n        <el-icon v-else :class=\"[ns.e('icon-inner'), ns.is('status')]\">\n          <check v-if=\"currentStatus === 'success'\" />\n          <close v-else />\n        </el-icon>\n      </div>\n    </div>\n    <!-- title & description -->\n    <div :class=\"ns.e('main')\">\n      <div :class=\"[ns.e('title'), ns.is(currentStatus)]\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div v-if=\"isSimple\" :class=\"ns.e('arrow')\" />\n      <div v-else :class=\"[ns.e('description'), ns.is(currentStatus)]\">\n        <slot name=\"description\">{{ description }}</slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n} from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { Check, Close } from '@element-plus/icons-vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { Component, PropType, Ref } from 'vue'\n\nexport interface IStepsProps {\n  space: number | string\n  active: number\n  direction: string\n  alignCenter: boolean\n  simple: boolean\n  finishStatus: string\n  processStatus: string\n}\n\nexport interface StepItemState {\n  uid: number\n  currentStatus: string\n  setIndex: (val: number) => void\n  calcProgress: (status: string) => void\n}\n\nexport interface IStepsInject {\n  props: IStepsProps\n  steps: Ref<StepItemState[]>\n}\n\nexport default defineComponent({\n  name: 'ElStep',\n  components: {\n    ElIcon,\n    Close,\n    Check,\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: '',\n    },\n    description: {\n      type: String,\n      default: '',\n    },\n    status: {\n      type: String,\n      default: '',\n      validator: (val: string): boolean =>\n        ['', 'wait', 'process', 'finish', 'error', 'success'].includes(val),\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('step')\n    const index = ref(-1)\n    const lineStyle = ref({})\n    const internalStatus = ref('')\n    const parent: IStepsInject = inject('ElSteps')\n    const currentInstance = getCurrentInstance()\n\n    onMounted(() => {\n      watch(\n        [\n          () => parent.props.active,\n          () => parent.props.processStatus,\n          () => parent.props.finishStatus,\n        ],\n        ([active]) => {\n          updateStatus(active)\n        },\n        { immediate: true }\n      )\n    })\n\n    onBeforeUnmount(() => {\n      parent.steps.value = parent.steps.value.filter(\n        (instance) => instance.uid !== currentInstance.uid\n      )\n    })\n\n    const currentStatus = computed(() => {\n      return props.status || internalStatus.value\n    })\n    const prevStatus = computed(() => {\n      const prevStep = parent.steps.value[index.value - 1]\n      return prevStep ? prevStep.currentStatus : 'wait'\n    })\n    const isCenter = computed(() => {\n      return parent.props.alignCenter\n    })\n    const isVertical = computed(() => {\n      return parent.props.direction === 'vertical'\n    })\n    const isSimple = computed(() => {\n      return parent.props.simple\n    })\n    const stepsCount = computed(() => {\n      return parent.steps.value.length\n    })\n    const isLast = computed(() => {\n      return (\n        parent.steps.value[stepsCount.value - 1]?.uid === currentInstance.uid\n      )\n    })\n    const space = computed(() => {\n      return isSimple.value ? '' : parent.props.space\n    })\n    const style = computed(() => {\n      const style: Record<string, unknown> = {\n        flexBasis:\n          typeof space.value === 'number'\n            ? `${space.value}px`\n            : space.value\n            ? space.value\n            : `${100 / (stepsCount.value - (isCenter.value ? 0 : 1))}%`,\n      }\n      if (isVertical.value) return style\n      if (isLast.value) {\n        style.maxWidth = `${100 / stepsCount.value}%`\n      }\n      return style\n    })\n\n    const setIndex = (val) => {\n      index.value = val\n    }\n    const calcProgress = (status) => {\n      let step = 100\n      const style: Record<string, unknown> = {}\n\n      style.transitionDelay = `${150 * index.value}ms`\n      if (status === parent.props.processStatus) {\n        step = 0\n      } else if (status === 'wait') {\n        step = 0\n        style.transitionDelay = `${-150 * index.value}ms`\n      }\n      style.borderWidth = step && !isSimple.value ? '1px' : 0\n      style[\n        parent.props.direction === 'vertical' ? 'height' : 'width'\n      ] = `${step}%`\n      lineStyle.value = style\n    }\n    const updateStatus = (activeIndex) => {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus\n      } else if (activeIndex === index.value && prevStatus.value !== 'error') {\n        internalStatus.value = parent.props.processStatus\n      } else {\n        internalStatus.value = 'wait'\n      }\n      const prevChild = parent.steps.value[stepsCount.value - 1]\n      if (prevChild) prevChild.calcProgress(internalStatus.value)\n    }\n\n    const stepItemState = reactive({\n      uid: computed(() => currentInstance.uid),\n      currentStatus,\n      setIndex,\n      calcProgress,\n    })\n    parent.steps.value = [...parent.steps.value, stepItemState]\n\n    return {\n      ns,\n      index,\n      lineStyle,\n      currentStatus,\n      isCenter,\n      isVertical,\n      isSimple,\n      isLast,\n      space,\n      style,\n      parent,\n      setIndex,\n      calcProgress,\n      updateStatus,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElIcon","Close","Check","useNamespace","ref","inject","getCurrentInstance","onMounted","watch","onBeforeUnmount","computed","reactive","_resolveComponent","_createElementBlock","_normalizeStyle","_normalizeClass","_createCommentVNode","_createElementVNode","_openBlock","_renderSlot","_createBlock","_withCtx","_resolveDynamicComponent","_createTextVNode","_toDisplayString"],"mappings":"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"}