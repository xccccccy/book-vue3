{"version":3,"file":"index.mjs","sources":["../../../../../../packages/components/message-box/src/index.vue"],"sourcesContent":["<template>\n  <transition name=\"fade-in-linear\" @after-leave=\"$emit('vanish')\">\n    <el-overlay\n      v-show=\"visible\"\n      :z-index=\"zIndex\"\n      :overlay-class=\"['is-message-box', modalClass]\"\n      :mask=\"modal\"\n    >\n      <div\n        class=\"el-overlay-message-box\"\n        @click=\"overlayEvent.onClick\"\n        @mousedown=\"overlayEvent.onMousedown\"\n        @mouseup=\"overlayEvent.onMouseup\"\n      >\n        <div\n          ref=\"rootRef\"\n          v-trap-focus\n          role=\"dialog\"\n          :aria-label=\"title || 'dialog'\"\n          aria-modal=\"true\"\n          :class=\"[\n            'el-message-box',\n            customClass,\n            { 'el-message-box--center': center, 'is-draggable': draggable },\n          ]\"\n          :style=\"customStyle\"\n          @click.stop=\"\"\n        >\n          <div\n            v-if=\"title !== null && title !== undefined\"\n            ref=\"headerRef\"\n            class=\"el-message-box__header\"\n          >\n            <div class=\"el-message-box__title\">\n              <el-icon\n                v-if=\"iconComponent && center\"\n                class=\"el-message-box__status\"\n                :class=\"typeClass\"\n              >\n                <component :is=\"iconComponent\" />\n              </el-icon>\n              <span>{{ title }}</span>\n            </div>\n            <button\n              v-if=\"showClose\"\n              type=\"button\"\n              class=\"el-message-box__headerbtn\"\n              aria-label=\"Close\"\n              @click=\"\n                handleAction(distinguishCancelAndClose ? 'close' : 'cancel')\n              \"\n              @keydown.prevent.enter=\"\n                handleAction(distinguishCancelAndClose ? 'close' : 'cancel')\n              \"\n            >\n              <el-icon class=\"el-message-box__close\">\n                <close />\n              </el-icon>\n            </button>\n          </div>\n          <div class=\"el-message-box__content\">\n            <div class=\"el-message-box__container\">\n              <el-icon\n                v-if=\"iconComponent && !center && hasMessage\"\n                class=\"el-message-box__status\"\n                :class=\"typeClass\"\n              >\n                <component :is=\"iconComponent\" />\n              </el-icon>\n              <div v-if=\"hasMessage\" class=\"el-message-box__message\">\n                <slot>\n                  <p v-if=\"!dangerouslyUseHTMLString\">{{ message }}</p>\n                  <p v-else v-html=\"message\" />\n                </slot>\n              </div>\n            </div>\n            <div v-show=\"showInput\" class=\"el-message-box__input\">\n              <el-input\n                ref=\"inputRef\"\n                v-model=\"inputValue\"\n                :type=\"inputType\"\n                :placeholder=\"inputPlaceholder\"\n                :class=\"{ invalid: validateError }\"\n                @keydown.enter=\"handleInputEnter\"\n              />\n              <div\n                class=\"el-message-box__errormsg\"\n                :style=\"{\n                  visibility: !!editorErrorMessage ? 'visible' : 'hidden',\n                }\"\n              >\n                {{ editorErrorMessage }}\n              </div>\n            </div>\n          </div>\n          <div class=\"el-message-box__btns\">\n            <el-button\n              v-if=\"showCancelButton\"\n              :loading=\"cancelButtonLoading\"\n              :class=\"[cancelButtonClass]\"\n              :round=\"roundButton\"\n              :size=\"btnSize\"\n              @click=\"handleAction('cancel')\"\n              @keydown.prevent.enter=\"handleAction('cancel')\"\n            >\n              {{ cancelButtonText || t('el.messagebox.cancel') }}\n            </el-button>\n            <el-button\n              v-show=\"showConfirmButton\"\n              ref=\"confirmRef\"\n              type=\"primary\"\n              :loading=\"confirmButtonLoading\"\n              :class=\"[confirmButtonClasses]\"\n              :round=\"roundButton\"\n              :disabled=\"confirmButtonDisabled\"\n              :size=\"btnSize\"\n              @click=\"handleAction('confirm')\"\n              @keydown.prevent.enter=\"handleAction('confirm')\"\n            >\n              {{ confirmButtonText || t('el.messagebox.confirm') }}\n            </el-button>\n          </div>\n        </div>\n      </div>\n    </el-overlay>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport { TrapFocus } from '@element-plus/directives'\nimport {\n  useDraggable,\n  useLocale,\n  useLockscreen,\n  useModal,\n  usePreventGlobal,\n  useRestoreActive,\n  useSameTarget,\n  useSize,\n  useZIndex,\n} from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport { ElOverlay } from '@element-plus/components/overlay'\nimport {\n  TypeComponents,\n  TypeComponentsMap,\n  isValidComponentSize,\n  off,\n  on,\n} from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { ElIcon } from '@element-plus/components/icon'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type {\n  Action,\n  MessageBoxState,\n  MessageBoxType,\n} from './message-box.type'\n\nexport default defineComponent({\n  name: 'ElMessageBox',\n  directives: {\n    TrapFocus,\n  },\n  components: {\n    ElButton,\n    ElInput,\n    ElOverlay,\n    ElIcon,\n    ...TypeComponents,\n  },\n  inheritAttrs: false,\n  props: {\n    buttonSize: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    modal: {\n      type: Boolean,\n      default: true,\n    },\n    lockScroll: {\n      type: Boolean,\n      default: true,\n    },\n    showClose: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnClickModal: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnPressEscape: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnHashChange: {\n      type: Boolean,\n      default: true,\n    },\n    center: Boolean,\n    draggable: Boolean,\n    roundButton: {\n      default: false,\n      type: Boolean,\n    },\n    container: {\n      type: String, // default append to body\n      default: 'body',\n    },\n    boxType: {\n      type: String as PropType<MessageBoxType>,\n      default: '',\n    },\n  },\n  emits: ['vanish', 'action'],\n  setup(props, { emit }) {\n    // const popup = usePopup(props, doClose)\n    const { t } = useLocale()\n    const visible = ref(false)\n    const { nextZIndex } = useZIndex()\n    // s represents state\n    const state = reactive<MessageBoxState>({\n      beforeClose: null,\n      callback: null,\n      cancelButtonText: '',\n      cancelButtonClass: '',\n      confirmButtonText: '',\n      confirmButtonClass: '',\n      customClass: '',\n      customStyle: {},\n      dangerouslyUseHTMLString: false,\n      distinguishCancelAndClose: false,\n      icon: '',\n      inputPattern: null,\n      inputPlaceholder: '',\n      inputType: 'text',\n      inputValue: null,\n      inputValidator: null,\n      inputErrorMessage: '',\n      message: null,\n      modalFade: true,\n      modalClass: '',\n      showCancelButton: false,\n      showConfirmButton: true,\n      type: '',\n      title: undefined,\n      showInput: false,\n      action: '' as Action,\n      confirmButtonLoading: false,\n      cancelButtonLoading: false,\n      confirmButtonDisabled: false,\n      editorErrorMessage: '',\n      // refer to: https://github.com/ElemeFE/element/commit/2999279ae34ef10c373ca795c87b020ed6753eed\n      // seemed ok for now without this state.\n      // isOnComposition: false, // temporary remove\n      validateError: false,\n      zIndex: nextZIndex(),\n    })\n\n    const typeClass = computed(() => {\n      const type = state.type\n      return type && TypeComponentsMap[type]\n        ? `el-message-box-icon--${type}`\n        : ''\n    })\n\n    const btnSize = useSize(\n      computed(() => props.buttonSize),\n      { prop: true, form: true, formItem: true }\n    )\n\n    const iconComponent = computed(\n      () => state.icon || TypeComponentsMap[state.type] || ''\n    )\n    const hasMessage = computed(() => !!state.message)\n    const rootRef = ref<HTMLElement>()\n    const headerRef = ref<HTMLElement>()\n    const inputRef = ref<HTMLElement>()\n    const confirmRef = ref<HTMLElement>()\n\n    const confirmButtonClasses = computed(() => state.confirmButtonClass)\n\n    watch(\n      () => state.inputValue,\n      async (val) => {\n        await nextTick()\n        if (props.boxType === 'prompt' && val !== null) {\n          validate()\n        }\n      },\n      { immediate: true }\n    )\n\n    watch(\n      () => visible.value,\n      (val) => {\n        if (val) {\n          if (props.boxType === 'alert' || props.boxType === 'confirm') {\n            nextTick().then(() => {\n              confirmRef.value?.$el?.focus?.()\n            })\n          }\n          state.zIndex = nextZIndex()\n        }\n        if (props.boxType !== 'prompt') return\n        if (val) {\n          nextTick().then(() => {\n            if (inputRef.value && inputRef.value.$el) {\n              getInputElement().focus()\n            }\n          })\n        } else {\n          state.editorErrorMessage = ''\n          state.validateError = false\n        }\n      }\n    )\n\n    const draggable = computed(() => props.draggable)\n    useDraggable(rootRef, headerRef, draggable)\n\n    onMounted(async () => {\n      await nextTick()\n      if (props.closeOnHashChange) {\n        on(window, 'hashchange', doClose)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      if (props.closeOnHashChange) {\n        off(window, 'hashchange', doClose)\n      }\n    })\n\n    function doClose() {\n      if (!visible.value) return\n      visible.value = false\n      nextTick(() => {\n        if (state.action) emit('action', state.action)\n      })\n    }\n\n    const handleWrapperClick = () => {\n      if (props.closeOnClickModal) {\n        handleAction(state.distinguishCancelAndClose ? 'close' : 'cancel')\n      }\n    }\n\n    const overlayEvent = useSameTarget(handleWrapperClick)\n\n    const handleInputEnter = (e: KeyboardEvent) => {\n      if (state.inputType !== 'textarea') {\n        e.preventDefault()\n        return handleAction('confirm')\n      }\n    }\n\n    const handleAction = (action: Action) => {\n      if (props.boxType === 'prompt' && action === 'confirm' && !validate()) {\n        return\n      }\n\n      state.action = action\n\n      if (state.beforeClose) {\n        state.beforeClose?.(action, state, doClose)\n      } else {\n        doClose()\n      }\n    }\n\n    const validate = () => {\n      if (props.boxType === 'prompt') {\n        const inputPattern = state.inputPattern\n        if (inputPattern && !inputPattern.test(state.inputValue || '')) {\n          state.editorErrorMessage =\n            state.inputErrorMessage || t('el.messagebox.error')\n          state.validateError = true\n          return false\n        }\n        const inputValidator = state.inputValidator\n        if (typeof inputValidator === 'function') {\n          const validateResult = inputValidator(state.inputValue)\n          if (validateResult === false) {\n            state.editorErrorMessage =\n              state.inputErrorMessage || t('el.messagebox.error')\n            state.validateError = true\n            return false\n          }\n          if (typeof validateResult === 'string') {\n            state.editorErrorMessage = validateResult\n            state.validateError = true\n            return false\n          }\n        }\n      }\n      state.editorErrorMessage = ''\n      state.validateError = false\n      return true\n    }\n\n    const getInputElement = () => {\n      const inputRefs = inputRef.value.$refs\n      return (inputRefs.input || inputRefs.textarea) as HTMLElement\n    }\n\n    const handleClose = () => {\n      handleAction('close')\n    }\n\n    // when close on press escape is disabled, pressing esc should not callout\n    // any other message box and close any other dialog-ish elements\n    // e.g. Dialog has a close on press esc feature, and when it closes, it calls\n    // props.beforeClose method to make a intermediate state by callout a message box\n    // for some verification or alerting. then if we allow global event liek this\n    // to dispatch, it could callout another message box.\n    if (props.closeOnPressEscape) {\n      useModal(\n        {\n          handleClose,\n        },\n        visible\n      )\n    } else {\n      usePreventGlobal(\n        visible,\n        'keydown',\n        (e: KeyboardEvent) => e.code === EVENT_CODE.esc\n      )\n    }\n\n    // locks the screen to prevent scroll\n    if (props.lockScroll) {\n      useLockscreen(visible)\n    }\n\n    // restore to prev active element.\n    useRestoreActive(visible)\n\n    return {\n      ...toRefs(state),\n      overlayEvent,\n      visible,\n      hasMessage,\n      typeClass,\n      btnSize,\n      iconComponent,\n      confirmButtonClasses,\n      rootRef,\n      headerRef,\n      inputRef,\n      confirmRef,\n      doClose, // for outside usage\n      handleClose, // for out side usage\n      handleWrapperClick,\n      handleInputEnter,\n      handleAction,\n      t,\n    }\n  },\n})\n</script>\n"],"names":["_resolveComponent","_resolveDirective","_openBlock","_withCtx","_withDirectives","_createElementVNode","_createElementBlock","_normalizeClass","_normalizeStyle","_withModifiers","_createBlock","_resolveDynamicComponent","_createCommentVNode","_toDisplayString","_createVNode","_renderSlot","_withKeys","_vShow","_createTextVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA4KA,MAAK,YAAa,eAAa,CAAA;AAAA,EAC7B,IAAM,EAAA,cAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,SAAA;AAAA,GAAA;AAAA,EAEF,UAAY,EAAA;AAAA,IACV,QAAA;AAAA,IACA,OAAA;AAAA,IACA,SAAA;AAAA,IACA,MAAA;AAAA,IACG,GAAA,cAAA;AAAA,GAAA;AAAA,EAEL,YAAc,EAAA,KAAA;AAAA,EACd,KAAO,EAAA;AAAA,IACL,UAAY,EAAA;AAAA,MACV,IAAM,EAAA,MAAA;AAAA,MACN,SAAW,EAAA,oBAAA;AAAA,KAAA;AAAA,IAEb,KAAO,EAAA;AAAA,MACL,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,IAAA;AAAA,KAAA;AAAA,IAEX,UAAY,EAAA;AAAA,MACV,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,IAAA;AAAA,KAAA;AAAA,IAEX,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,IAAA;AAAA,KAAA;AAAA,IAEX,iBAAmB,EAAA;AAAA,MACjB,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,IAAA;AAAA,KAAA;AAAA,IAEX,kBAAoB,EAAA;AAAA,MAClB,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,IAAA;AAAA,KAAA;AAAA,IAEX,iBAAmB,EAAA;AAAA,MACjB,IAAM,EAAA,OAAA;AAAA,MACN,OAAS,EAAA,IAAA;AAAA,KAAA;AAAA,IAEX,MAAQ,EAAA,OAAA;AAAA,IACR,SAAW,EAAA,OAAA;AAAA,IACX,WAAa,EAAA;AAAA,MACX,OAAS,EAAA,KAAA;AAAA,MACT,IAAM,EAAA,OAAA;AAAA,KAAA;AAAA,IAER,SAAW,EAAA;AAAA,MACT,IAAM,EAAA,MAAA;AAAA,MACN,OAAS,EAAA,MAAA;AAAA,KAAA;AAAA,IAEX,OAAS,EAAA;AAAA,MACP,IAAM,EAAA,MAAA;AAAA,MACN,OAAS,EAAA,EAAA;AAAA,KAAA;AAAA,GAAA;AAAA,EAGb,KAAA,EAAO,CAAC,QAAU,EAAA,QAAA,CAAA;AAAA,EAClB,KAAA,CAAM,KAAO,EAAA,EAAE,IAAQ,EAAA,EAAA;AAErB,IAAA,MAAM,EAAE,CAAM,EAAA,GAAA,SAAA,EAAA,CAAA;AACd,IAAA,MAAM,UAAU,GAAI,CAAA,KAAA,CAAA,CAAA;AACpB,IAAA,MAAM,EAAE,UAAe,EAAA,GAAA,SAAA,EAAA,CAAA;AAEvB,IAAA,MAAM,QAAQ,QAA0B,CAAA;AAAA,MACtC,WAAa,EAAA,IAAA;AAAA,MACb,QAAU,EAAA,IAAA;AAAA,MACV,gBAAkB,EAAA,EAAA;AAAA,MAClB,iBAAmB,EAAA,EAAA;AAAA,MACnB,iBAAmB,EAAA,EAAA;AAAA,MACnB,kBAAoB,EAAA,EAAA;AAAA,MACpB,WAAa,EAAA,EAAA;AAAA,MACb,WAAa,EAAA,EAAA;AAAA,MACb,wBAA0B,EAAA,KAAA;AAAA,MAC1B,yBAA2B,EAAA,KAAA;AAAA,MAC3B,IAAM,EAAA,EAAA;AAAA,MACN,YAAc,EAAA,IAAA;AAAA,MACd,gBAAkB,EAAA,EAAA;AAAA,MAClB,SAAW,EAAA,MAAA;AAAA,MACX,UAAY,EAAA,IAAA;AAAA,MACZ,cAAgB,EAAA,IAAA;AAAA,MAChB,iBAAmB,EAAA,EAAA;AAAA,MACnB,OAAS,EAAA,IAAA;AAAA,MACT,SAAW,EAAA,IAAA;AAAA,MACX,UAAY,EAAA,EAAA;AAAA,MACZ,gBAAkB,EAAA,KAAA;AAAA,MAClB,iBAAmB,EAAA,IAAA;AAAA,MACnB,IAAM,EAAA,EAAA;AAAA,MACN,KAAO,EAAA,KAAA,CAAA;AAAA,MACP,SAAW,EAAA,KAAA;AAAA,MACX,MAAQ,EAAA,EAAA;AAAA,MACR,oBAAsB,EAAA,KAAA;AAAA,MACtB,mBAAqB,EAAA,KAAA;AAAA,MACrB,qBAAuB,EAAA,KAAA;AAAA,MACvB,kBAAoB,EAAA,EAAA;AAAA,MAIpB,aAAe,EAAA,KAAA;AAAA,MACf,MAAQ,EAAA,UAAA,EAAA;AAAA,KAAA,CAAA,CAAA;AAGV,IAAM,MAAA,SAAA,GAAY,SAAS,MAAM;AAC/B,MAAA,MAAM,OAAO,KAAM,CAAA,IAAA,CAAA;AACnB,MAAA,OAAO,IAAQ,IAAA,iBAAA,CAAkB,IAC7B,CAAA,GAAA,CAAA,qBAAA,EAAwB,IACxB,CAAA,CAAA,GAAA,EAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAGN,IAAM,MAAA,OAAA,GAAU,OACd,CAAA,QAAA,CAAS,MAAM,KAAA,CAAM,UACrB,CAAA,EAAA,EAAE,IAAM,EAAA,IAAA,EAAM,IAAM,EAAA,IAAA,EAAM,QAAU,EAAA,IAAA,EAAA,CAAA,CAAA;AAGtC,IAAA,MAAM,gBAAgB,QACpB,CAAA,MAAM,MAAM,IAAQ,IAAA,iBAAA,CAAkB,MAAM,IAAS,CAAA,IAAA,EAAA,CAAA,CAAA;AAEvD,IAAA,MAAM,UAAa,GAAA,QAAA,CAAS,MAAM,CAAC,CAAC,KAAM,CAAA,OAAA,CAAA,CAAA;AAC1C,IAAA,MAAM,OAAU,GAAA,GAAA,EAAA,CAAA;AAChB,IAAA,MAAM,SAAY,GAAA,GAAA,EAAA,CAAA;AAClB,IAAA,MAAM,QAAW,GAAA,GAAA,EAAA,CAAA;AACjB,IAAA,MAAM,UAAa,GAAA,GAAA,EAAA,CAAA;AAEnB,IAAM,MAAA,oBAAA,GAAuB,QAAS,CAAA,MAAM,KAAM,CAAA,kBAAA,CAAA,CAAA;AAElD,IAAA,KAAA,CACE,MAAM,KAAA,CAAM,UACZ,EAAA,OAAO,GAAQ,KAAA;AACb,MAAM,MAAA,QAAA,EAAA,CAAA;AACN,MAAA,IAAI,KAAM,CAAA,OAAA,KAAY,QAAY,IAAA,GAAA,KAAQ,IAAM,EAAA;AAC9C,QAAA,QAAA,EAAA,CAAA;AAAA,OAAA;AAAA,KAAA,EAGJ,EAAE,SAAW,EAAA,IAAA,EAAA,CAAA,CAAA;AAGf,IAAA,KAAA,CACE,MAAM,OAAA,CAAQ,KACd,EAAA,CAAC,GAAQ,KAAA;AACP,MAAA,IAAI,GAAK,EAAA;AACP,QAAA,IAAI,KAAM,CAAA,OAAA,KAAY,OAAW,IAAA,KAAA,CAAM,YAAY,SAAW,EAAA;AAC5D,UAAA,QAAA,EAAA,CAAW,KAAK,MAAM;AACpB,YAAA,IAAA,EAAA,EAAA,EAAA;AAAuB,YAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAA,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA;AAAA,WAAA,CAAA,CAAA;AAG3B,SAAA;AAAe,QAAA,KAAA,CAAA,MAAA,GAAA,UAAA,EAAA,CAAA;AAEjB,OAAA;AAAgC,MAAA,IAAA,KAAA,CAAA,OAAA,KAAA,QAAA;AAChC,QAAA,OAAS;AACP,MAAA,IAAA,GAAA,EAAA;AACE,QAAA,QAAa,EAAA,CAAA,IAAA,CAAA,MAAA;AACX,UAAkB,IAAA,QAAA,CAAA,KAAA,IAAA,QAAA,CAAA,KAAA,CAAA,GAAA,EAAA;AAAA,YAAA,eAAA,EAAA,CAAA,KAAA,EAAA,CAAA;AAAA,WAAA;AAAA,SAGjB,CAAA,CAAA;AACL,OAAA,MAAA;AACA,QAAA,KAAA,CAAM,kBAAgB,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,CAAA,aAAA,GAAA,KAAA,CAAA;AAAA,OAAA;AAK5B,KAAM,CAAA,CAAA;AACN,IAAA,MAAA,oBAAiC,CAAA,MAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AAEjC,IAAA,YAAsB,CAAA,OAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AACpB,IAAM,SAAA,CAAA,YAAA;AACN,MAAA,cAA6B,EAAA,CAAA;AAC3B,MAAA,IAAA,uBAAyB,EAAA;AAAA,QAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,OAAA,CAAA,CAAA;AAAA,OAAA;AAI7B,KAAA,CAAA,CAAA;AACE,IAAA,eAA6B,CAAA,MAAA;AAC3B,MAAA,IAAA,uBAA0B,EAAA;AAAA,QAAA,GAAA,CAAA,MAAA,EAAA,YAAA,EAAA,OAAA,CAAA,CAAA;AAAA,OAAA;AAI9B,KAAmB,CAAA,CAAA;AACjB,IAAA,SAAa,OAAA,GAAA;AAAO,MAAA,IAAA,CAAA,OAAA,CAAA,KAAA;AACpB,QAAA,OAAgB;AAChB,MAAA,OAAA,CAAA,KAAe,GAAA,KAAA,CAAA;AACb,MAAA,QAAU,CAAA,MAAA;AAAQ,QAAA,IAAA;AAAqB,UAAA,IAAA,CAAA,QAAA,EAAA,KAAA,CAAA,MAAA,CAAA,CAAA;AAAA,OAAA,CAAA,CAAA;AAI3C,KAAA;AACE,IAAA,MAAI,kBAAyB,GAAA,MAAA;AAC3B,MAAa,IAAA,KAAA,CAAA;AAA4C,QAAA,YAAA,CAAA,KAAA,CAAA,yBAAA,GAAA,OAAA,GAAA,QAAA,CAAA,CAAA;AAAA,OAAA;AAI7D,KAAA,CAAA;AAEA,IAAM,MAAA,YAAA,GAAA,aAAyC,CAAA,kBAAA,CAAA,CAAA;AAC7C,IAAI,MAAA,oBAAoB,CAAY,KAAA;AAClC,MAAE,IAAA,KAAA,CAAA,SAAA,KAAA,UAAA,EAAA;AACF,QAAA,CAAA,CAAA,cAAoB,EAAA,CAAA;AAAA,QAAA,OAAA,YAAA,CAAA,SAAA,CAAA,CAAA;AAAA,OAAA;AAIxB,KAAM,CAAA;AACJ,IAAA,MAAI,YAAkB,GAAA,CAAA,MAAA,KAAA;AACpB,MAAA,IAAA,EAAA,CAAA;AAAA,MAAA,IAAA,KAAA,CAAA,OAAA,KAAA,QAAA,IAAA,MAAA,KAAA,SAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AAGF,QAAA,OAAe;AAEf,OAAA;AACE,MAAM,KAAA,CAAA,MAAA,GAAA,MAAA,CAAc;AAAe,MAC9B,IAAA,KAAA,CAAA,WAAA,EAAA;AACL,QAAA,CAAA,EAAA,GAAA,KAAA,CAAA,WAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA;AAAA,OAAA,MAAA;AAAA,QAAA,OAAA,EAAA,CAAA;AAIJ,OAAA;AACE,KAAI,CAAA;AACF,IAAA,MAAA;AACA,MAAA,IAAA,kBAAoB,QAAC,EAAA;AACnB,QAAM,MAAA,YAAA,GAAA,KAAA,CAAA,YACE,CAAA;AACR,QAAA,IAAA,YAAsB,IAAA,CAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA,UAAA,IAAA,EAAA,CAAA,EAAA;AACtB,UAAO,KAAA,CAAA,kBAAA,GAAA,KAAA,CAAA,iBAAA,IAAA,CAAA,CAAA,qBAAA,CAAA,CAAA;AAAA,UAAA,KAAA,CAAA,aAAA,GAAA,IAAA,CAAA;AAET,UAAA;AACA,SAAI;AACF,QAAM,MAAA,cAAA,GAAA,oBAAsC,CAAA;AAC5C,QAAA,IAAA,qBAAuB,KAAO,UAAA,EAAA;AAC5B,UAAM,MAAA,cAAA,GAAA,cACE,CAAA,KAAA,CAAA,UAAA,CAAA,CAAqB;AAC7B,UAAA,IAAA,cAAsB,KAAA,KAAA,EAAA;AACtB,YAAO,KAAA,CAAA,kBAAA,GAAA,KAAA,CAAA,iBAAA,IAAA,CAAA,CAAA,qBAAA,CAAA,CAAA;AAAA,YAAA,KAAA,CAAA,aAAA,GAAA,IAAA,CAAA;AAET,YAAI,OAAA;AACF,WAAA;AACA,UAAA,IAAA,OAAsB,cAAA,KAAA,QAAA,EAAA;AACtB,YAAO,KAAA,CAAA,kBAAA,GAAA,cAAA,CAAA;AAAA,YAAA,KAAA,CAAA,aAAA,GAAA,IAAA,CAAA;AAAA,YAAA,OAAA,KAAA,CAAA;AAAA,WAAA;AAIb,SAAA;AACA,OAAA;AACA,MAAO,KAAA,CAAA,kBAAA,GAAA,EAAA,CAAA;AAAA,MAAA,KAAA,CAAA,aAAA,GAAA,KAAA,CAAA;AAGT,MAAA;AACE,KAAM,CAAA;AACN,IAAQ,MAAA,wBAA6B;AAAA,MAAA,MAAA,SAAA,GAAA,QAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AAGvC,MAAA,sBAA0B,IAAA,SAAA,CAAA,QAAA,CAAA;AACxB,KAAa,CAAA;AAAA,IAAA,MAAA,WAAA,GAAA,MAAA;AASf,MAAA,YAA8B,CAAA,OAAA,CAAA,CAAA;AAC5B,KACE,CAAA;AAAA,IACE,IAAA,KAAA,CAAA,kBAAA,EAAA;AAAA,MAEF,QAAA,CAAA;AAAA,QAEG,WAAA;AACL,OAAA,EAAA,OAAA,CAAA,CAAA;AAG8C,KAAA,MAAA;AAKhD,MAAA,gBAAsB,CAAA,OAAA,EAAA,SAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,IAAA,KAAA,UAAA,CAAA,GAAA,CAAA,CAAA;AACpB,KAAc;AAAA,IAAA,IAAA,KAAA,CAAA,UAAA,EAAA;AAIhB,MAAiB,aAAA,CAAA,OAAA,CAAA,CAAA;AAEjB,KAAO;AAAA,IAAA,gBACK,CAAA,OAAA,CAAA,CAAA;AAAA,IACV,OAAA;AAAA,MACA,GAAA,MAAA,CAAA,KAAA,CAAA;AAAA,MACA,YAAA;AAAA,MACA,OAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAA;AAAA,MACA,OAAA;AAAA,MACA,aAAA;AAAA,MACA,oBAAA;AAAA,MACA,OAAA;AAAA,MACA,SAAA;AAAA,MACA,QAAA;AAAA,MACA,UAAA;AAAA,MACA,OAAA;AAAA,MACA,WAAA;AAAA,MACA,kBAAA;AAAA,MACA,gBAAA;AAAA,MAAA,YAAA;AAAA,MAAA,CAAA;AAAA,KAAA,CAAA;;;;MA1bU,UAAA,GAAA;AAAA,EACJ,GAAM,EAAA,CAAA;AAAA,EAAA,GAAA,EAAA,WAAA;iCAEK;;qBA4BN,KAAM,EAAA,uBAAA,EAAA,CAAA;;;MAQoB,UAAA,GAAA;AAAA,EAAA,GAAA,EAAA,CAAA;;;qBAOP,GAAM,EAAA,CAAA,EAAA,CAAA;+BAmBrB,CAAA,CAAA;;;;;;;;6BA8BN,GAAAA,gBAAA,CAAA,YAAA,CAAA,CAAA;AAAA,EAAA,MA5HI,qBAAA,GAAAC,gBAAA,CAAA,YAAA,CAAA,CAAA;AAAA,EAAkB,OAAAC;AAAkB,IAAA,IAAA,EAAA,gBAAA;wBA2HtC,CAAA,EAAA,CAAA,KAAA,MAAA,CAAA,EAAA,CAAA,GAAA,CAAA,MAAA,KAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AAAA,GAAA,EAAA;AAAA,IAAA,OAxHD,EAAAC,OAAA,CAAA,MAAA;AAAA,MAAAC,0BACyB,CAAA,qBAAA,EAAA;AAAA,QAClC,SAAM,EAAA,IAAA,CAAA,MAAA;AAAA,QAAA,eAAA,EAAA,CAAA,gBAAA,EAAA,IAAA,CAAA,UAAA,CAAA;;AAqHD,OAAA,EAAA;AAAA,QAAA,OAlHE,EAAAD,OAAA,CAAA,MAAA;AAAA,UAAAE,kBACA,CAAA,KAAA,EAAA;AAAsB,YAC3B,KAAS,EAAA,wBAAA;AAA0B,YACnC,OAAO,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAA,IAAE,CAAa,YAAA,CAAA,OAAA,IAAA,IAAA,CAAA,oBAAS,CAAA,GAAA,IAAA,CAAA,CAAA;AAAA,YAAA,WAAA,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAA,IAAA,CAAA,YAAA,CAAA,WAAA,IAAA,IAAA,CAAA,YAAA,CAAA,WAAA,CAAA,GAAA,IAAA,CAAA,CAAA;4CA8G1B,CAAA,EAAA,CAAA,GAAA,CAAA,GAAA,IAAA,KAAA,IAAA,CAAA,YAAA,CAAA,SAAA,IAAA,IAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AAAA,WAAA,EAAA;AA3GA,YAAAD,cAEC,EAAAF,SAAA,EAAA,EAAAI,kBAAA,CAAA,KAAA,EAAA;AAAA,cACJ,cAAY;AAAK,cAClB,IAAW,EAAA,QAAA;AAAA,cACV,YAAK,EAAA,IAAA,CAAA,KAAA,IAAA,QAAA;AAAA,cAAA,YAAA,EAAA,MAAA;AAA8C,cAAA,KAAA,EAAAC,cAAA,CAAA;AAAA,gBAAA,gBAAA;AAA6E,gBAAA,IAAA,CAAA,WAAA;AAAA,0CAKzH,EAAA,IAAA,CAAA,MAAA,EAAA,cAAA,EAAA,IAAA,CAAA,SAAA,EAAA;AAAA;AACR,cAAc,KAAA,EAAAC,cAAA,CAAA,IAAA,CAAA,WAAA,CAAA;AAAA,cAAA,OAAA,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAAC,aAAA,CAAA,MAAA;AAGN,eAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AA8BF,aA1BJ,EAAA;AASM,cAPI,IAAA,CAAA,KAAA,KAAA,IAAA,IAAA,kCAKE,EAAA,EAAAH,kBAAA,CAAA,KAAA,EAAA,UAAA,EAAA;AAAA,gBAAAD,kBAAA,CAAA,KAAA,EAAA,UAAA,EAAA;AAJR,kBAAA,IAAA,CAAA,qBAAM,CACE,MAAA,IAAAH,SAAA,EAAA,EAAAQ,WAAA,CAAA,kBAAA,EAAA;AAAA,oBAAA,GAAA,EAAA,CAAA;yCAEyB,CAAA,CAAA,wBAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA;AAAA,mBAAA,EAAA;AAAjB,oBAAA,OAAA,EAAAP,OAAA,CAAA,MAAA;AAAA,uBAAAD,SAAA,EAAA,EAAAQ,WAAA,CAAAC,uBAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA;;AAElB,oBAAA,CAAA,EAAA,CAAA;AAAc,mBAAA,EAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,IAAAC,kBAAA,CAAA,MAAA,EAAA,IAAA,CAAA;AAAA,iDAiBP,EAAAC,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA;AAAA,iBAAA,CAAA;oBAbF,CAAA,SAAA,IAAAX,SAAA,EAAA,EAAAI,kBAAA,CAAA,QAAA,EAAA;AAAA,kBACL,GAAM,EAAA,CAAA;AAAA,kBACN,IAAW,EAAA,QAAA;AAAA,kBACV,KAAA,EAAA,2BAAwB;AAAsC,kBAG9D,YAAwC,EAAA,OAAA;;kBAIzC,SAEU,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,WAF4B,CAAAG,aAAA,CAAA,CAAA,MAAA,KAAA,IAAA,CAAA,YAAA,CAAA,IAAA,CAAA,yBAAA,GAAA,OAAA,GAAA,QAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,iBAAA,EAAA;AAC3B,kBAAAK,WAAA,CAAA,kBAAA,EAAA,EAAA,KAAA,EAAA,uBAAA,EAAA,EAAA;AAAA,oBAAA,OAAA,EAAAX,OAAA,CAAA,MAAA;AAAA,sBAAAW,WAAA,CAAA,gBAAA,CAAA;;;;AAIf,iBAAA,EAAA,EAAA,CAAA,IAAAF,kBAkCM,CAAA,MAAA,EAAA,IAAA,CAAA;AAAA,eAjCJ,EAAA,GAAA,CAAA,IAAAA,kBAcM,CAAA,MAAA,EAAA,IAAA,CAAA;AAAA,cAAAP,kBAZiB,CAAA,KAAA,EAAK,UAAU,EAAA;AAK1B,gBAAAA,kBAAA,CAAA,KAAA,EAAA,UAAA,EAAA;AAJR,kBAAA,IAAA,CAAA,sBACQ,CAAA,MAAA,IAAA,IAAA,CAAA,UAAA,IAAAH,SAAA,EAAA,EAAAQ,WAAA,CAAA,kBAAA,EAAA;AAAA,oBAAA,GAAA,EAAA,CAAA;yCAEyB,CAAA,CAAA,wBAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA;AAAA,mBAAA,EAAA;AAAjB,oBAAA,OAAA,EAAAP,OAAA,CAAA,MAAA;AAAA,uBAAAD,SAAA,EAAA,EAAAQ,WAAA,CAAAC,uBAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA;;oBAElB,CAAA,EAAA,CAAA;AAKM,mBAJJ,EAAA,CAAA,EAAA,CAAA,OAGO,+BAAA,EAAA,IAAA,CAAA;AAAA,kBAAA,IAAA,CAFK,UAAV,IAAAT,SAAA,EAAA,EAAAI,kBAAA,CAAA,KAAA,EAAA,UAAA,EAAqD;AACxB,oBAAAS,UAAA,CAAA,IAAA,CAAA,MAAA,EAAA,SAAA,EAAA,EAAA,EAAA,MAAA;2BAAX,CAAA,wBAAA,IAAAb,SAAA,EAAA,EAAAI,kBAAA,CAAA,GAAA,EAAA,UAAA,EAAAO,eAAA,CAAA,IAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,KAAAX,SAAA,EAAA,EAAAI,kBAAA,CAAA,GAAA,EAAA;AAAA,wBAAA,GAAA,EAAA,CAAA;;;;AAIxB,mBAAA,CAAA,IAAAM,kBAAA,CAAA,MAAA,EAiBM;AAAA,iBAAA,CAhBJ;AAOE,gBAAAR,cANI,CAAAC,kBAAA,CAAA,KAAA,EAAA,UAAA,EAAA;AAAA,kBACKS,WAAA,CAAA,mBAAA,EAAA;AAAA,oBAAU,GAAA,EAAA,UAAA;AAAA,oBAClB,UAAM,EAAA,IAAA,CAAA,UAAA;AAAA,oBACN,qBAAa,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,MAAA,KAAA,IAAA,CAAA,UAAA,GAAA,MAAA,CAAA;AAAA,oBACb,UAAkB,CAAA,SAAA;AAAA,oBAClB,WAAO,uBAAwB;AAAA,oBAAA,KAAA,EAAAP,cAAA,CAAA,EAAA,OAAA,EAAA,IAAA,CAAA,aAAA,EAAA,CAAA;oBAS5B,SAAA,EAAAS,QAAA,CAAA,IAAA,CAAA,gBAAA,EAAA,CAAA,OAAA,CAAA,CAAA;AAAA,mBAAA,EANE,IAAA,EAAA,CAAA,EAAA,CAAA,YAAA,EAAA,MAAA,EAAA,aAAA,EAAA,OAAA,EAAA,WAAA,CAAA,CAAA;AAAA,kBAAAX,kBACA,CAAA,KAAA,EAAA;AAAA,oBAAA,KAAA,EAAA,0BAAsD;AAAA,oBAAA,KAAA,EAAAG,cAAA,CAAA;AAAA,sBAAA,UAAA,EAAA,CAAA,CAAA,IAIvC,CAAA,kBAAA,GAAA,SAAA,GAAA,QAAA;AAAA,qBAAA,CAAA;AAfZ,mBAAA,EAAAK,eAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,EAAA,CAAA,CAAA;AAAA,iBAAA,EAAA,GAAA,CAAA,EAAA;AAAA,kBAAA,CAAAI,KAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AAAA,iBAmBf,CAAA;AA0BM,eAAA,CAxBI;AASI,cAAAZ,kBAAA,CAAA,KAAA,EAAA,WAAA,EAAA;oBARA,CAAA,gBAAA,IAAAH,SAAA,EAAA,EAAAQ,WAAA,CAAA,oBAAA,EAAA;AAAA,kBACT;AAAQ,kBACR,OAAO,EAAA,IAAA,CAAA,mBAAA;AAAA,kBACP,KAAM,EAAAH,cAAA,CAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA;AAAA,kBACN,KAAA,EAAA;AAAmB,kBACnB,IAAA,EAAA,IAAA,CAAO;AAA4B,kBAAA,OAAA,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,MAAA,KAAA,IAAA,CAAA,YAAA,CAAA,QAAA,CAAA,CAAA;oCAEpC,CAAmD,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAAS,QAAA,CAAAP,aAAA,CAAA,CAAA,MAAA,KAAA,IAAA,CAAA,YAAA,CAAA,QAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,iBAAA,EAAA;AAA3B,kBAAA,OAAA,EAAAN,OAAA,CAAA,MAAA;AAAA,oBAAAe,eAAA,CAAAL,eAAA,CAAA,IAAA,CAAA,gBAAA,IAAA,IAAA,CAAA,CAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;;AAed,iBAAA,EAXN,CAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA,IAAAD,kBAAA,CAAA,MAAA,EAAA,IAAA,CAAA;AAAA,gBAAAR,cACC,CAAAU,WAAA,CAAA,oBAAA,EAAA;AAAA,kBACJ,GAAS,EAAA,YAAA;AAAA,kBACT,eAAQ;AAAA,kBACR,OAAO,EAAA,IAAA,CAAA,oBAAA;AAAA,kBACP,KAAU,EAAAP,cAAA,CAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA;AAAA,kBACV,KAAM,EAAA,IAAA,CAAA,WAAA;AAAA,kBACN,QAAA;AAAmB,kBACnB,IAAA,EAAA,IAAA,CAAO;AAA4B,kBAAA,OAAA,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,MAAA,KAAA,IAAA,CAAA,YAAA,CAAA,SAAA,CAAA,CAAA;oCAEpC,CAAqD,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAAS,QAAA,CAAAP,aAAA,CAAA,CAAA,MAAA,KAAA,IAAA,CAAA,YAAA,CAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AAAA,iBAAA,EAAA;AAA5B,kBAAA,OAAA,EAAAN,OAAA,CAAA,MAAA;AAAA,oBAAAe,eAAA,CAAAL,eAAA,CAAA,IAAA,CAAA,iBAAA,IAAA,IAAA,CAAA,CAAA,CAAA,uBAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AAXjB,kBAAA,CAAA,EAAA,CAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,kBAAA,CAAAI,KAAA,EAAA,IAAA,CAAA,iBAAA,CAAA;AAAA,iBAAA,CAAA;;;;;;;AAzGR,QAAA,CAAA,EAAA,CAAA;AAAA,OAAA,EAAA,CAAA,EAAA,CAAA,SAAA,EAAA,eAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,QAAA,CAAAA,KAAA,EAAA,IAAA,CAAA,OAAA,CAAA;AAAA,OAAA,CAAA;;;;;;;;;"}