{"version":3,"file":"tree-node.mjs","sources":["../../../../../../packages/components/tree/src/tree-node.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { isFunction, isString } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      const store = tree.store.value\n      store.setCurrentNode(props.node)\n      tree.ctx.emit(\n        'current-change',\n        store.currentNode ? store.currentNode.data : null,\n        store.currentNode\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n"],"names":["ElCollapseTransition","NodeContent","getNodeKey","getNodeKeyUtil","_createElementBlock","_normalizeClass","_createElementVNode","_normalizeStyle","_openBlock","_createBlock","_withModifiers","_resolveDynamicComponent","_createCommentVNode","_createVNode","_withCtx","_Fragment","_renderList","_vShow"],"mappings":"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"}